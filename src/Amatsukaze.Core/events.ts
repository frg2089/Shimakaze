import { type Client } from 'oicq'

export const setEvents = (client: Client, callback: (name: string, eventArgs: any) => void) => {
  const wrap = (name: string) => (eventArgs: any) => { callback(name, eventArgs) }
  client.on('system.login.qrcode', wrap('system.login.qrcode'))
  client.on('system.login.slider', wrap('system.login.slider'))
  client.on('system.login.device', wrap('system.login.device'))
  client.on('system.login.error', wrap('system.login.error'))
  client.on('system.online', wrap('system.online'))
  client.on('system.offline.network', wrap('system.offline.network'))
  client.on('system.offline.kickoff', wrap('system.offline.kickoff'))
  client.on('system.offline', wrap('system.offline'))
  client.on('request.friend.add', wrap('request.friend.add'))
  client.on('request.friend.single', wrap('request.friend.single'))
  client.on('request.friend', wrap('request.friend'))
  client.on('request.group.add', wrap('request.group.add'))
  client.on('request.group.invite', wrap('request.group.invite'))
  client.on('request.group', wrap('request.group'))
  client.on('request', wrap('request'))
  client.on('message.private', wrap('message.private'))
  client.on('message.private.friend', wrap('message.private.friend'))
  client.on('message.private.group', wrap('message.private.group'))
  client.on('message.private.other', wrap('message.private.other'))
  client.on('message.private.self', wrap('message.private.self'))
  client.on('message.group', wrap('message.group'))
  client.on('message.group.normal', wrap('message.group.normal'))
  client.on('message.group.anonymous', wrap('message.group.anonymous'))
  client.on('message.discuss', wrap('message.discuss'))
  client.on('message', wrap('message'))
  client.on('notice.friend.increase', wrap('notice.friend.increase'))
  client.on('notice.friend.decrease', wrap('notice.friend.decrease'))
  client.on('notice.friend.recall', wrap('notice.friend.recall'))
  client.on('notice.friend.poke', wrap('notice.friend.poke'))
  client.on('notice.group.increase', wrap('notice.group.increase'))
  client.on('notice.group.decrease', wrap('notice.group.decrease'))
  client.on('notice.group.recall', wrap('notice.group.recall'))
  client.on('notice.group.admin', wrap('notice.group.admin'))
  client.on('notice.group.ban', wrap('notice.group.ban'))
  client.on('notice.group.transfer', wrap('notice.group.transfer'))
  client.on('notice.group.poke', wrap('notice.group.poke'))
  client.on('notice.friend', wrap('notice.friend'))
  client.on('notice.group', wrap('notice.group'))
  client.on('notice', wrap('notice'))
  client.on('sync.message', wrap('sync.message'))
  client.on('sync.read.private', wrap('sync.read.private'))
  client.on('sync.read.group', wrap('sync.read.group'))
  client.on('sync.read', wrap('sync.read'))
  client.on('internal.sso', wrap('internal.sso'))
  client.on('internal.input', wrap('internal.input'))
  client.on('guild.message', wrap('guild.message'))
}
